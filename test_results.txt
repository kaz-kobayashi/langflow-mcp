テスト実行結果
実行日時: 2025-10-10 06:27:57
対象範囲: 1～10番
================================================================================

[1] 1. 在庫最適化（4ツール）
ツール: optimize_safety_stock_allocation
説明: タブーサーチによる安全在庫配置の最適化
--------------------------------------------------------------------------------
入力:
3段階サプライチェーンで、タブーサーチを使用して安全在庫配置を最適化してください。

品目データ（JSON形式）:
[
  {
    "name": "原材料",
    "h": 1.0,
    "b": 50.0,
    "average_demand": 0,
    "std_demand": 0,
    "lead_time": 2.0,
    "echelon_lead_time": 5.0
  },
  {
    "name": "中間品",
    "h": 2.0,
    "b": 100.0,
    "average_demand": 0,
    "std_demand": 0,
    "lead_time": 2.0,
    "echelon_lead_time": 3.0
  },
  {
    "name": "最終製品",
    "h": 5.0,
    "b": 150.0,
    "average_demand": 100.0,
    "std_demand": 20.0,
    "lead_time": 1.0,
    "echelon_lead_time": 1.0
  }
]

BOMデータ（JSON形式）:
[
  {"child": "原材料", "parent": "中間品", "units": 1.0},
  {"child": "中間品", "parent": "最終製品", "units": 1.0}
]

パラメータ:
- z値: 1.65（95%サービスレベル）
- 最大反復回数: 100
- タブー期間: 5

結果 (0.63秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[2] 1. 在庫最適化（4ツール）
ツール: calculate_safety_stock
説明: 安全在庫の計算
--------------------------------------------------------------------------------
入力:
以下の条件で安全在庫を計算してください：

- 需要の平均: 100個/日
- 需要の標準偏差: 15個/日
- リードタイム: 7日
- サービスレベル: 95%

結果 (0.59秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[3] 1. 在庫最適化（4ツール）
ツール: calculate_base_stock_levels
説明: 基在庫レベルの計算
--------------------------------------------------------------------------------
入力:
4段階サプライチェーンの基在庫レベルを計算してください。

品目データ（JSON形式）:
[
  {"name": "原材料A", "h": 0.5, "average_demand": 0, "std_demand": 0, "lead_time": 2.0, "echelon_lead_time": 7.0},
  {"name": "原材料B", "h": 0.8, "average_demand": 0, "std_demand": 0, "lead_time": 3.0, "echelon_lead_time": 6.0},
  {"name": "中間品", "h": 2.0, "average_demand": 0, "std_demand": 0, "lead_time": 2.0, "echelon_lead_time": 3.0},
  {"name": "最終製品", "h": 5.0, "average_demand": 120.0, "std_demand": 18.0, "lead_time": 1.0, "echelon_lead_time": 1.0}
]

BOMデータ（JSON形式）:
[
  {"child": "原材料A", "parent": "中間品"},
  {"child": "原材料B", "parent": "中間品"},
  {"child": "中間品", "parent": "最終製品"}
]

z値: 1.96（97.5%サービスレベル）

結果 (0.55秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[4] 1. 在庫最適化（4ツール）
ツール: dynamic_programming_for_SSA
説明: 動的計画法による安全在庫配置の厳密解
--------------------------------------------------------------------------------
入力:
5段階のツリー構造ネットワークで、動的計画法により安全在庫配置の厳密解を求めてください。

品目データ（JSON形式）:
[
  {"name": "Stage0", "h": 0.5, "mu": 0, "sigma": 0, "proc_time": 1, "lead_time_lb": 1, "lead_time_ub": 2},
  {"name": "Stage1", "h": 1.0, "mu": 0, "sigma": 0, "proc_time": 1, "lead_time_lb": 1, "lead_time_ub": 2},
  {"name": "Stage2", "h": 2.0, "mu": 0, "sigma": 0, "proc_time": 1, "lead_time_lb": 1, "lead_time_ub": 2},
  {"name": "Stage3", "h": 3.0, "mu": 0, "sigma": 0, "proc_time": 1, "lead_time_lb": 1, "lead_time_ub": 2},
  {"name": "Stage4", "h": 5.0, "mu": 200.0, "sigma": 30.0, "proc_time": 1, "lead_time_lb": 1, "lead_time_ub": 2}
]

BOMデータ（JSON形式）:
[
  {"child": "Stage0", "parent": "Stage1"},
  {"child": "Stage1", "parent": "Stage2"},
  {"child": "Stage2", "parent": "Stage3"},
  {"child": "Stage3", "parent": "Stage4"}
]

z値: 1.65

結果 (0.42秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[5] 2. シミュレーション（6ツール）
ツール: simulate_qr_policy
説明: (Q,R)連続発注方策のシミュレーション
--------------------------------------------------------------------------------
入力:
(Q,R)発注方策のシミュレーションを実行してください。

パラメータ:
- サンプル数: 100
- シミュレーション期間: 200期
- 発注量Q: 150個
- 発注点R: 80個
- 需要の平均: 100個/日
- 需要の標準偏差: 15個/日
- リードタイム: 5日
- 在庫保管費用: 1円/個/日
- バックオーダーコスト: 100円/個
- 固定発注コスト: 500円

結果 (0.41秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[6] 2. シミュレーション（6ツール）
ツール: simulate_ss_policy
説明: (s,S)連続発注方策のシミュレーション
--------------------------------------------------------------------------------
入力:
(s,S)発注方策のシミュレーションを実行してください。

パラメータ:
- サンプル数: 100
- シミュレーション期間: 200期
- 発注点s: 75個
- 最大在庫レベルS: 225個
- 需要の平均: 100個/日
- 需要の標準偏差: 15個/日
- リードタイム: 5日
- 在庫保管費用: 1円/個/日
- バックオーダーコスト: 100円/個
- 固定発注コスト: 500円

結果 (0.52秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[7] 2. シミュレーション（6ツール）
ツール: simulate_base_stock_policy
説明: 基在庫方策のシミュレーション
--------------------------------------------------------------------------------
入力:
基在庫方策のシミュレーションを実行してください。

パラメータ:
- サンプル数: 100
- シミュレーション期間: 200期
- 基在庫レベル: 250個
- 需要の平均: 100個/日
- 需要の標準偏差: 15個/日
- リードタイム: 5日
- 在庫保管費用: 1円/個/日
- バックオーダーコスト: 100円/個

結果 (0.44秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[8] 2. シミュレーション（6ツール）
ツール: simulate_multistage_inventory
説明: 多段階在庫シミュレーション
--------------------------------------------------------------------------------
入力:
4段階サプライチェーンで200期間のシミュレーションを実行してください。

パラメータ:
- サンプル数: 50
- シミュレーション期間: 200期
- 段階数: 4
- 平均需要: 120個/日
- 標準偏差: 18個/日
- リードタイム: [3, 2, 2, 1]日
- 発注点s: [250, 200, 180, 150]個
- 基在庫レベルS: [400, 320, 300, 250]個
- 在庫保管費用h: [0.5, 1.0, 2.0, 5.0]円/個/日
- バックオーダーコスト: 100円/個
- 固定発注コスト: 1000円

結果 (0.40秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[9] 2. シミュレーション（6ツール）
ツール: simulate_network_base_stock
説明: ネットワークベースストックシミュレーション
--------------------------------------------------------------------------------
入力:
分岐構造を持つサプライチェーンネットワークでシミュレーションを実行してください。

品目データ（JSON形式）:
[
  {"name": "原材料", "h": 1.0, "b": 50.0, "average_demand": 0, "std_demand": 0, "lead_time": 2, "echelon_lead_time": 5, "capacity": 500},
  {"name": "中間品A", "h": 2.0, "b": 80.0, "average_demand": 0, "std_demand": 0, "lead_time": 2, "echelon_lead_time": 3, "capacity": 300},
  {"name": "中間品B", "h": 2.5, "b": 90.0, "average_demand": 0, "std_demand": 0, "lead_time": 2, "echelon_lead_time": 3, "capacity": 300},
  {"name": "最終製品", "h": 5.0, "b": 150.0, "average_demand": 100, "std_demand": 15, "lead_time": 1, "echelon_lead_time": 1, "capacity": 400}
]

BOMデータ（JSON形式）:
[
  {"child": "原材料", "parent": "中間品A", "units": 1.0, "allocation": 0.5},
  {"child": "原材料", "parent": "中間品B", "units": 1.0, "allocation": 0.5},
  {"child": "中間品A", "parent": "最終製品", "units": 1.0},
  {"child": "中間品B", "parent": "最終製品", "units": 1.0}
]

パラメータ:
- サンプル数: 30
- シミュレーション期間: 100期
- 基在庫レベル: {"原材料": 500, "中間品A": 300, "中間品B": 300, "最終製品": 250}

結果 (0.35秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================

[10] 3. 発注方策の最適化（4ツール）
ツール: optimize_qr_policy
説明: (Q,R)発注方策の最適化
--------------------------------------------------------------------------------
入力:
(Q,R)発注方策のパラメータを最適化してください。

パラメータ:
- 需要の平均: 100個/日
- 需要の標準偏差: 15個/日
- リードタイム: 5日
- 在庫保管費用: 1円/個/日
- バックオーダーコスト: 100円/個
- 固定発注コスト: 500円
- シミュレーションサンプル数: 50
- シミュレーション期間: 200期

結果 (0.40秒):
{
  "status": "error",
  "message": "リクエストエラー: 403 Client Error: Forbidden for url: https://web-production-1ed39.up.railway.app/api/chat"
}

================================================================================


================================================================================
テスト実行サマリー
================================================================================
総テスト数: 10
成功: 0 (0.0%)
失敗: 10 (100.0%)
================================================================================

失敗したテスト:
  [1] optimize_safety_stock_allocation
  [2] calculate_safety_stock
  [3] calculate_base_stock_levels
  [4] dynamic_programming_for_SSA
  [5] simulate_qr_policy
  [6] simulate_ss_policy
  [7] simulate_base_stock_policy
  [8] simulate_multistage_inventory
  [9] simulate_network_base_stock
  [10] optimize_qr_policy
